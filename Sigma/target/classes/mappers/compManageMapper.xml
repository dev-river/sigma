<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.mapper.compManage">
	<select id="read" resultType="kr.co.domain.memberVO">
		select * from userinfo where id = #{id}
	</select>
	
	<update id="update">
		update userinfo set compname = #{compname}, compdetail = #{compdetail}, compaddress1 = #{compaddress1}, compaddress2 = #{compaddress2}, compphone = #{compphone} where id = #{id}
	</update>
	
	<delete id="delete">
		delete from userinfo where id = #{id}
	</delete>
	
	<select id="gamelist" resultType="kr.co.domain.gameVO">
		select * from gameDetail where writer = #{writer} order by num desc
	</select>
	
	<insert id="gameinsert">
		insert into gamedetail (num, title, content, writer, category, price, dcrate, gamefilepath) values((select nvl2(max(num), max(num)+1, 1) from gamedetail), #{title}, #{content}, #{writer}, #{category}, #{price}, #{dcrate}, #{gamefilepath})
	</insert>
	
	<select id="count" resultType="Integer">
		select count(num) from gamedetail where writer = #{writer}  
	</select>
	
	<select id="refundList" resultType="kr.co.domain.refundVO">
		select refundlist.id, gamedetail.title, refundlist.updatedate, refundlist.status 
		from refundlist, buylist, gamedetail 
		where refundlist.buynum = buylist.num and buylist.gdnum = gamedetail.num and gamedetail.writer = #{id} order by refundlist.status
	</select>
	
	<select id="gameDetailDC" resultType="kr.co.domain.gameDetailDcVO">
		select g.num as num, g.title as gdnum, to_char(gdc.dcstartdate, 'yyyy-mm-dd') as dcstartdate, to_char(gdc.dcenddate, 'yyyy-mm-dd') as dcenddate, to_char(gdc.rqstartdate, 'yyyy-mm-dd') as rqstartdate, to_char(gdc.rqenddate, 'yyyy-mm-dd') as rqenddate, gdc.goal, gdc.dcrate 
		from gamedetail g, gamedetaildc gdc
		where g.num = gdc.gdnum and g.writer = #{writer} order by num desc
	</select>
	
	<select id="refundRead" resultType="kr.co.domain.refundVO">
		select refundlist.num, refundlist.id, gamedetail.title, refundlist.updatedate, refundlist.status, buylist.buyprice as buynum, refundlist.content, refundlist.refunddate, refundlist.compcontent
		from refundlist, buylist, gamedetail 
		where refundlist.buynum = buylist.num and buylist.gdnum = gamedetail.num and gamedetail.writer = #{id}
	</select>
	
	<update id="refundOK">
		update refundlist set status = 'o', refunddate = sysdate where num = #{num}
	</update>
	
	<update id="refundReject">
		update refundlist set status = 'x', compcontent = #{inputString}, refunddate = sysdate where num = #{num}
	</update>
	
	<update id="returncash">
		update userinfo set cash = cash + #{buynum} where id = #{id}
	</update>
	
	<update id="giveback1">
		update userinfo set cash = cash - #{buynum} * 90 / 100 where id = #{userid}
	</update>
	
	<update id="giveback2">
		update userinfo set cash = cash - #{buynum} * 10 / 100 where id = 'cashadmin'
	</update>
	
	<select id="seachcash" resultType="Integer">
		select cash from userinfo where id = #{writer}
	</select>
	
	<update id="givemoney">
		update userinfo set cash = cash + 1000  where id = 'cashadmin'
	</update>
	
	<update id="sellermoney">
		update userinfo set cash = cash - 1000  where id = #{writer}
	</update>
</mapper>